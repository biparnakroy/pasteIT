{"version":3,"sources":["Sidebar.js","Main.js","App.js","index.js"],"names":["Sidebar","_ref","notes","onAddNote","onDeleteNote","activeNote","setActiveNote","sortedNotes","sort","a","b","lastModified","width","setWidth","useState","isResizing","setIsResizing","handleMouseMove","e","newWidth","clientX","window","innerWidth","handleMouseUp","document","removeEventListener","_jsxs","className","style","children","_jsx","BsClipboard2Check","onClick","BsPlusLg","onMouseDown","addEventListener","map","_ref2","i","id","title","body","substr","Date","toLocaleDateString","hour","minute","Main","onUpdateNote","height","setHeight","isJson","setIsJson","newHeight","innerHeight","clientY","onEditField","key","value","lastmodified","now","checkIsJson","JSON","parse","useEffect","type","onChange","target","autoFocus","placeholder","ReactMarkdown","jsonString","jsonObject","stringify","renderFormattedJson","VscDebug","BsCodeSlash","App","setNotes","localStorage","setItem","newNote","uuid","idToDelete","filter","note","find","updatedNote","updatedNoteArray","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.066c089b.chunk.js","sourcesContent":["import { BsClipboard2Check, BsPlusLg } from \"react-icons/bs\";\nimport React, { useState } from 'react';\n\nconst Sidebar = ({\n  notes,\n  onAddNote,\n  onDeleteNote,\n  activeNote,\n  setActiveNote,\n}) => {\n  const sortedNotes = notes.sort((a, b) => b.lastModified - a.lastModified);\n  const [width, setWidth] = useState(30 + '%'); // Initial width in pixels\n  const [isResizing, setIsResizing] = useState(false);\n  const handleMouseDown = (e) => {\n    setIsResizing(true);\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  const handleMouseMove = (e) => {\n    if (isResizing) {\n      const newWidth = e.clientX;\n      if (newWidth >= 200 && newWidth <= window.innerWidth * 0.5) {\n        setWidth(newWidth);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsResizing(false);\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  return (\n    <div className=\"app-sidebar\" style={{ width: `${width}px` }}>\n      <div className=\"app-sidebar-header\">\n        <h1> <BsClipboard2Check /> Paste_IT</h1>\n        <button onClick={onAddNote}> <BsPlusLg /> Add</button>\n      </div>\n      <div className=\"drag-handle\" onMouseDown={handleMouseDown}></div>\n      <div className=\"app-sidebar-notes\">\n        {sortedNotes.map(({ id, title, body, lastModified }, i) => (\n          <div\n            className={`app-sidebar-note ${id === activeNote && \"active\"}`}\n            onClick={() => setActiveNote(id)}\n            key={i}\n          >\n            <div className=\"sidebar-note-title\">\n              <strong>{title}</strong>\n              <button onClick={(e) => onDeleteNote(id)}>Delete</button>\n            </div>\n\n            <p>{body && body.substr(0, 100) + \"...\"}</p>\n            <small className=\"note-meta\">\n              Last Modified{\" \"}\n              {new Date(lastModified).toLocaleDateString(\"en-IN\", {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n              })}\n            </small>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;","import ReactMarkdown from \"react-markdown\";\nimport { BsClipboard2Check, BsCodeSlash } from \"react-icons/bs\";\nimport { VscDebug } from \"react-icons/vsc\";\nimport React, { useState, useEffect } from 'react';\n\n\nfunction Main({ activeNote, onUpdateNote }) {\n    const [height, setHeight] = useState(200); // Initial height in pixels\n    const [isResizing, setIsResizing] = useState(false);\n    const [isJson, setIsJson] = useState(false);\n\n    const handleMouseDown = (e) => {\n        setIsResizing(true);\n        document.addEventListener('mousemove', handleMouseMove);\n        document.addEventListener('mouseup', handleMouseUp);\n    };\n\n    const handleMouseMove = (e) => {\n        if (isResizing) {\n            const newHeight = window.innerHeight - e.clientY;\n            if (newHeight >= 100 && newHeight <= window.innerHeight * 0.9) {\n                setHeight(newHeight);\n            }\n        }\n    };\n\n    const handleMouseUp = () => {\n        setIsResizing(false);\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n    };\n\n    const onEditField = (key, value) => {\n        onUpdateNote({\n            ...activeNote,\n            [key]: value,\n            lastmodified: Date.now(),\n        })\n    };\n\n    const checkIsJson = (value) => {\n        try {\n            JSON.parse(value);\n            setIsJson(true);\n        } catch {\n            setIsJson(false);\n        }\n    };\n\n\n    const handleBodyChange = (e) => {\n        const value = e.target.value;\n        onEditField(\"body\", value);\n        checkIsJson(value);\n    };\n\n    const renderFormattedJson = (jsonString) => {\n        try {\n            const jsonObject = JSON.parse(jsonString);\n            return <pre>{JSON.stringify(jsonObject, null, 2)}</pre>;\n        } catch {\n            return null;\n        }\n    };\n\n    useEffect(() => {\n        if (activeNote) {\n          checkIsJson(activeNote.body);\n        }\n      }, [activeNote]);\n\n    if (!activeNote) return <div className=\"no-active-note\"> <BsClipboard2Check /> Paste . <VscDebug /> Debug . <BsCodeSlash /> Code</div>;\n    return <div className=\"app-main\">\n        <div className=\"app-main-note-edit\">\n            <input\n                type=\"text\"\n                id=\"title\"\n                value={activeNote.title}\n                onChange={(e) => onEditField(\"title\", e.target.value)}\n                autoFocus\n            />\n            <textarea\n                id=\"body\"\n                placeholder=\"Paste here...\"\n                value={activeNote.body ||\" \"}\n                onChange={handleBodyChange} />\n        </div>\n\n        <div className=\"app-main-note-preview\" style={{ height: `${height}px` }}>\n            <div\n                className=\"vertical-drag-handle\"\n                onMouseDown={handleMouseDown}\n            ></div>\n            <h1 className=\"preview-title\">{activeNote.title}</h1>\n            {!isJson && (\n                <ReactMarkdown className=\"markdown-preview\">\n                    {activeNote.body}\n                </ReactMarkdown>)}\n            {isJson && (\n                <div className=\"json-preview\">\n                    {renderFormattedJson(activeNote.body)}\n                </div>\n            )}\n        </div>\n    </div>;\n}\n\nexport default Main;\n","import {useEffect,useState} from \"react\";\nimport uuid from \"react-uuid\";\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Main from './Main';\n\nfunction App() {\n\n  const [notes, setNotes] = useState( localStorage.notes ? JSON.parse(localStorage.notes) : []);\n\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n\n  const onAddNote = () =>{\n    const newNote ={\n      id: uuid(),\n\n      title: \"Untitled..\",\n\n      body: \"\",\n\n      lastModified: Date.now(),\n    };\n\n    setNotes([newNote, ...notes]);\n  };\n\n  const onUpdateNote = (updatedNote) =>{\n      const updatedNoteArray = notes.map((note) =>{\n        if(note.id === activeNote){\n          return updatedNote;\n\n        }\n        return note;\n      });\n\n      setNotes(updatedNoteArray);\n  };\n\n  const onDeleteNote =(idToDelete)=> {\n    setNotes(notes.filter((note) => note.id !== idToDelete));\n  };\n\n  const getActiveNote = () => {\n    return notes.find((note)=> note.id === activeNote);\n  };\n\n  return (\n    <div className=\"App\">\n      <Sidebar \n      notes={notes} \n      onAddNote={onAddNote} \n      onDeleteNote={onDeleteNote} \n      activeNote={activeNote}\n      setActiveNote={setActiveNote}\n      />\n      <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}