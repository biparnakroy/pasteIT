{"version":3,"sources":["Sidebar.js","Main.js","App.js","index.js"],"names":["Sidebar","notes","onAddNote","onDeleteNote","activeNote","setActiveNote","sortedNotes","sort","a","b","lastModified","className","onClick","map","i","id","title","body","e","substr","Date","toLocaleDateString","hour","minute","Main","onUpdateNote","onEditField","key","value","now","type","onChange","target","autoFocus","placeholder","App","useState","localStorage","JSON","parse","setNotes","useEffect","setItem","stringify","newNote","uuid","idToDelete","filter","note","find","updatedNote","updatedNoteArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAyCiBA,EAzCD,SAAC,GAMR,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,cAEMC,EAAcL,EAAMM,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,aAAeF,EAAEE,gBAE5D,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACA,8CACE,wBAAQC,QAASV,EAAjB,oBAEF,qBAAKS,UAAU,oBAAf,SACGL,EAAYO,KAAI,WAAoCC,GAApC,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMP,EAApB,EAAoBA,aAApB,OACf,sBACEC,UAAS,2BAAsBI,IAAOX,GAAc,UACpDQ,QAAS,kBAAMP,EAAcU,IAF/B,UAIE,sBAAKJ,UAAU,qBAAf,UACE,iCAASK,IACT,wBAAQJ,QAAS,SAACM,GAAD,OAAOf,EAAaY,IAArC,uBAGF,4BAAIE,GAAQA,EAAKE,OAAO,EAAG,KAAO,QAClC,wBAAOR,UAAU,YAAjB,0BACgB,IACb,IAAIS,KAAKV,GAAcW,mBAAmB,QAAS,CAClDC,KAAM,UACNC,OAAQ,2B,iCCMXC,MAnCf,YAA0C,IAA3BpB,EAA0B,EAA1BA,WAAYqB,EAAc,EAAdA,aACjBC,EAAc,SAACC,EAAIC,GAAU,IAAD,EAC9BH,EAAa,2BACNrB,GADK,uBAEPuB,EAAMC,GAFC,6BAGOR,KAAKS,OAHZ,MAOhB,OAAIzB,EACG,sBAAKO,UAAU,WAAf,UACH,sBAAKA,UAAU,qBAAf,UACI,uBACAmB,KAAK,OACLf,GAAG,QACHa,MAAOxB,EAAWY,MAClBe,SAAU,SAACb,GAAD,OAAOQ,EAAY,QAAQR,EAAEc,OAAOJ,QAC9CK,WAAS,IAET,0BACAlB,GAAG,OACHmB,YAAY,0BACZN,MAAOxB,EAAWa,KAClBc,SAAU,SAACb,GAAD,OAAOQ,EAAY,OAAOR,EAAEc,OAAOJ,aAGjD,sBAAKjB,UAAU,wBAAf,UACI,oBAAIA,UAAU,gBAAd,SAA+BP,EAAWY,QAC1C,cAAC,IAAD,CAAeL,UAAU,mBAAzB,SACKP,EAAWa,aApBD,qBAAKN,UAAU,iBAAf,+BCsDZwB,MA3Df,WAAgB,IAAD,EAEaC,mBAAUC,aAAapC,MAAQqC,KAAKC,MAAMF,aAAapC,OAAS,IAF7E,mBAENA,EAFM,KAECuC,EAFD,OAIuBJ,oBAAS,GAJhC,mBAINhC,EAJM,KAIMC,EAJN,KA6Cb,OAvCAoC,qBAAU,WACRJ,aAAaK,QAAQ,QAASJ,KAAKK,UAAU1C,MAC5C,CAACA,IAsCF,sBAAKU,UAAU,MAAf,UACE,cAAC,EAAD,CACAV,MAAOA,EACPC,UAtCc,WAChB,IAAM0C,EAAS,CACb7B,GAAI8B,MAEJ7B,MAAO,gBAEPC,KAAM,GAENP,aAAcU,KAAKS,OAGrBW,EAAS,CAACI,GAAF,mBAAc3C,MA4BpBE,aAbgB,SAAC2C,GACnBN,EAASvC,EAAM8C,QAAO,SAACC,GAAD,OAAUA,EAAKjC,KAAO+B,OAa1C1C,WAAYA,EACZC,cAAeA,IAEf,cAAC,EAAD,CAAMD,WAZDH,EAAMgD,MAAK,SAACD,GAAD,OAASA,EAAKjC,KAAOX,KAYFqB,aA7BlB,SAACyB,GAClB,IAAMC,EAAmBlD,EAAMY,KAAI,SAACmC,GAClC,OAAGA,EAAKjC,KAAOX,EACN8C,EAGFF,KAGTR,EAASW,UCnCfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.01c3f779.chunk.js","sourcesContent":["const Sidebar = ({\n    notes,\n    onAddNote,\n    onDeleteNote,\n    activeNote,\n    setActiveNote,\n  }) => {\n    const sortedNotes = notes.sort((a, b) => b.lastModified - a.lastModified);\n  \n    return (\n      <div className=\"app-sidebar\">\n        <div className=\"app-sidebar-header\">\n        <h1>Sticky Notes</h1>\n          <button onClick={onAddNote}>Add</button>\n        </div>\n        <div className=\"app-sidebar-notes\">\n          {sortedNotes.map(({ id, title, body, lastModified }, i) => (\n            <div\n              className={`app-sidebar-note ${id === activeNote && \"active\"}`}\n              onClick={() => setActiveNote(id)}\n            >\n              <div className=\"sidebar-note-title\">\n                <strong>{title}</strong>\n                <button onClick={(e) => onDeleteNote(id)}>Delete</button>\n              </div>\n  \n              <p>{body && body.substr(0, 100) + \"...\"}</p>\n              <small className=\"note-meta\">\n                Last Modified{\" \"}\n                {new Date(lastModified).toLocaleDateString(\"en-IN\", {\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                })}\n              </small>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n  \n  export default Sidebar;","import ReactMarkdown from \"react-markdown\";\n\nfunction Main({activeNote, onUpdateNote}){\n    const onEditField = (key,value)=> {\n        onUpdateNote({\n            ...activeNote,\n            [key]: value,\n            lastmodified : Date.now(),\n        })\n    };\n\n    if(!activeNote) return <div className=\"no-active-note\">No note selected</div>;\n    return <div className=\"app-main\">\n        <div className=\"app-main-note-edit\">\n            <input \n            type=\"text\" \n            id=\"title\" \n            value={activeNote.title} \n            onChange={(e) => onEditField(\"title\",e.target.value)} \n            autoFocus\n            />\n            <textarea \n            id=\"body\" \n            placeholder=\"Write your note here...\"\n            value={activeNote.body}\n            onChange={(e) => onEditField(\"body\",e.target.value)} />\n        </div>\n\n        <div className=\"app-main-note-preview\">\n            <h1 className=\"preview-title\">{activeNote.title}</h1>\n            <ReactMarkdown className=\"markdown-preview\">\n                {activeNote.body}\n                </ReactMarkdown>\n        </div>\n    </div>;\n}\n\nexport default Main;\n","import {useEffect,useState} from \"react\";\nimport uuid from \"react-uuid\";\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Main from './Main';\n\nfunction App() {\n\n  const [notes, setNotes] = useState( localStorage.notes ? JSON.parse(localStorage.notes) : []);\n\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n\n  const onAddNote = () =>{\n    const newNote ={\n      id: uuid(),\n\n      title: \"Untitled Note\",\n\n      body: \"\",\n\n      lastModified: Date.now(),\n    };\n\n    setNotes([newNote, ...notes]);\n  };\n\n  const onUpdateNote = (updatedNote) =>{\n      const updatedNoteArray = notes.map((note) =>{\n        if(note.id === activeNote){\n          return updatedNote;\n\n        }\n        return note;\n      });\n\n      setNotes(updatedNoteArray);\n  };\n\n  const onDeleteNote =(idToDelete)=> {\n    setNotes(notes.filter((note) => note.id !== idToDelete));\n  };\n\n  const getActiveNote = () => {\n    return notes.find((note)=> note.id === activeNote);\n  };\n\n  return (\n    <div className=\"App\">\n      <Sidebar \n      notes={notes} \n      onAddNote={onAddNote} \n      onDeleteNote={onDeleteNote} \n      activeNote={activeNote}\n      setActiveNote={setActiveNote}\n      />\n      <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}